{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","postId","commentsFromServer","filter","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAEAC,EACC,mBAAGE,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,IAED,QAGN,qBAAKE,UAAU,oBAAf,SACGD,QCfIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKH,UAAU,cAAf,SAEIG,EAASC,KAAI,SAAAR,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,aCNzCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBT,EAAgBS,EAAhBT,MAAOD,EAASU,EAATV,KAEf,OACE,mBACEG,UAAU,WACVC,KAAI,iBAAYH,GAFlB,SAIGD,M,MCaA,IAAMW,EAAW,SAAC,GAAc,IAnBhBZ,EAmBIa,EAAW,EAAXA,KACjBV,EAAgCU,EAAhCV,KAAMI,EAA0BM,EAA1BN,SAAUO,EAAgBD,EAAhBC,MAAOH,EAASE,EAATF,KAE/B,OACE,mCACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,8BACG,cACAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGP,UAAU,iBAAb,SAA+BD,KAlChBH,EAoCAO,EAnChBP,EAAQe,OAYX,cAAC,EAAD,CACER,SAAUP,IAXV,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,uCCRKgB,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKb,UAAU,WAAf,SAEIa,EAAMT,KAAI,SAAAK,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,YCS1C,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCN,UANuBY,EAMGN,EAAKJ,GALxBW,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQmB,SAAWA,MAM/DR,MAZmBW,EAYDT,EAAKS,OAXhBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKF,KAAOa,MAC3C,QAFP,IAAqBA,EAKIH,KAUZM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6c9b0906.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        {email ? (\n          <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n            {email}\n          </a>\n        ) : null}\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {\n        comments.map(comment => (\n          <CommentInfo comment={comment} key={comment.id} />\n        ))\n      }\n    </div>\n  </>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nfunction checkComments(comment) {\n  if (!comment.length) {\n    return (\n      <>\n        <hr />\n\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n\n    );\n  }\n\n  return (\n    <CommentList\n      comments={comment}\n    />\n  );\n}\n\nexport const PostInfo = ({ post }) => {\n  const { body, comments, title, user } = post;\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">{title}</h3>\n\n          <p>\n            {' Posted by '}\n            {user && <UserInfo user={user} />}\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">{body}</p>\n\n        {checkComments(comments)}\n\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {\n        posts.map(post => (\n          <PostInfo post={post} key={post.id} />\n        ))\n      }\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  comments: getCommentsById(post.id),\n  user: getUserById(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}